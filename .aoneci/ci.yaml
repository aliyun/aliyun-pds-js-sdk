name: pds-js-sdk 单元测试

triggers:
  push:
    branches:
      - 'daily/**'
  merge_request:
    target-branches:
      - '**'

jobs:
  nodejs-job:
    image: alios-8u
    steps:
      - uses: checkout
      - uses: setup-env
        inputs:
          node-version: 20
          tnpm-version: 9
          tnpm-cache: false
      - run: |
          npm i --registry=https://registry.npmmirror.com
          npm ls
          npm run build
          npm run format
          IT_CONFIG=${{vars.IT_CONFIG}} npm run cov:node
          cp -rf coverage/node/* coverage/
      - uses: nodejs-coverage
  win-browser-job:
    name: 'Windows 浏览器执行'
    envs:
        remote_home: "${{vars.TEST_DIR}}\\${{pipeline.id}}\\${{pipeline.inst.number}}"
        remote_test_dir: "${{vars.TEST_DIR}}\\${{pipeline.id}}\\${{pipeline.inst.number}}\\${{git.repoName}}"
    steps:
      - uses: setup-env
        inputs:
          node-version: 20
          tnpm-version: 9
          tnpm-cache: false
      - run: | 
          echo '${{vars.REMOTE}}'
          mkdir -p ~/.ssh
          (echo -e '${{secrets.privateKey}}') > ~/.ssh/id_rsa
          (echo -e '${{secrets.publicKey}}') > ~/.ssh/id_rsa.pub
          chmod 400 ~/.ssh/id_rsa
          echo '--------- 准备执行文件 -----------'
          (
          echo "set IT_CONFIG=${{vars.IT_CONFIG}}" 
          echo "set GECKODRIVER_CDNURL=${{vars.GECKODRIVER_CDNURL}}"
          echo "set TEST_TYPE=browser"
          echo "npm i --registry=https://registry.npmmirror.com && npx playwright install && npm run build && node test.js"
          ) > run.bat
          ssh -o StrictHostKeyChecking=no ${{vars.REMOTE}} 'dir .'
          echo '------------- clone code -------------'
          echo "md ${{envs.remote_home}} && cd ${{envs.remote_home}} && git clone ${{git.url}} --depth 1 && cd ${{git.repoName}} && git fetch origin merge-requests/${{git.merge_request.id}}/head:${{git.merge_request.sourceBranch}} && git checkout ${{git.merge_request.sourceBranch}}"
          ssh ${{vars.REMOTE}} "md ${{envs.remote_home}} && cd ${{envs.remote_home}} && git clone ${{git.url}} --depth 1 && cd ${{git.repoName}} && git fetch origin merge-requests/${{git.merge_request.id}}/head:${{git.merge_request.sourceBranch}} && git checkout ${{git.merge_request.sourceBranch}}"
          echo '------------- run ----------------'
          scp run.bat "${{vars.REMOTE}}:${{envs.remote_test_dir}}/"
          ssh ${{vars.REMOTE}} "cd ${{envs.remote_test_dir}} && run.bat"
          echo '---------copy report to local--------'
          scp -r ${{vars.REMOTE}}:"${{envs.remote_test_dir}}/coverage/browser" "coverage"
          pwd
          ls "coverage"
          ssh ${{vars.REMOTE}} "rd /s /q ${{envs.remote_test_dir}}"
          echo '---------------DONE-----------------'
      - uses: nodejs-coverage

